$(document).ready(function () {
    // Initialize DataTable and fetch data via AJAX
    const table = $('#EmployeeTypeTable').DataTable({
        ajax: {
            url: '/Master/GetAllEmployeeTypeData', // Replace with your controller action
            method: 'GET',
            dataSrc: '' // Data source key, empty string assumes the root of the JSON array
        },
        columns: [
            {
                // Autogenerated row numbers (1, 2, 3, ...)
                render: function (data, type, row, meta) {
                    return meta.row + 1; // meta.row gives the zero-based index, adding 1 to make it 1-based
                }
            },
            //{ data: 'id' },
            { data: 'empType1' },
            //{ data: 'description' },
        //columns: [
        //    { data: 'id' },
        //    { data: 'empType1' },
        //    //{ data: 'roleDescription' },

            {
                data: 'id',
                render: function (data) {
                    return `
                                <div class="d-flex justify-content-center">
                                    
                                    <button class="btn btn-danger btn-sm mx-1 delete-btn" data-id="${data}">
                                          <i class="bi bi-trash"></i> Delete
                                      </button>
                                    <button class="btn btn-warning btn-sm mx-1 edit-btn" data-id="${data}">
                                        <i class="bi bi-pencil"></i> Edit
                                    </button>
                                </div>
                            `;
                },
                orderable: false // Disable sorting on the Action column
            }
        ],
        pageLength: 5, // Default rows per page
        lengthMenu: [5, 10, 15, 20], // Options for rows per page
        language: {
            search: "Search :",
            lengthMenu: "Show _MENU_ entries",
            //info: "Showing _START_ to _END_ of _TOTAL_ prescribers",
            //infoEmpty: "No prescribers available",
            paginate: {
                first: "First",
                last: "Last",
                next: "Next",
                previous: "Previous"
            }
        }
    });

    // Handle Delete Button Click for NoticeBoard
    $('#EmployeeTypeTable').on('click', '.delete-btn', function () {
        const empTypeID = $(this).data('id');  // Get the Notice Board ID from the data-id attribute

        // Confirm before deleting
        if (confirm(`Are you sure you want to delete this Employee Type ?`)) {
            // Make AJAX request to delete the notice board
            $.ajax({
                url: `/Master/DeleteEmployeeType`,  // API endpoint to delete the notice board
                method: 'POST',
                data: { id: empTypeID },
                success: function (response) {
                    if (response.success) {
                        // Remove the row from the table
                        // $(`#row-${noticeBoardID}`).remove(); // Assuming the table rows have IDs like 'row-1', 'row-2', etc.
                        // Optionally show a success message
                        alert(response.message);
                        location.reload();
                    } else {
                        // Handle error if the delete fails
                        alert(response.message || 'An error occurred while deleting the Employee Type.');
                    }
                },
                error: function (error) {
                    console.error('Error deleting  Employee Type:', error);
                    alert('An error occurred while deleting the Employee Type.');
                }
            });
        }
    });
    // Handle Edit Button Click
    $('#EmployeeTypeTable').on('click', '.edit-btn', function () {
        const empTypeID = $(this).data('id');

        editEmployeeTypeDetails(empTypeID);
    });

});

function editEmployeeTypeDetails(empTypeID) {
    $.ajax({
        url: '/Master/GetEmployeeTypeDetails/' + empTypeID, // API endpoint
        method: 'GET',
        success: function (response) {
            // Log response for debugging
            console.log('Full Response:', response);
            console.log('Data:', response.data);

            // Access the nested data object
            if (response.success && response.data && response.data.data) {
                const EmpTypeData = response.data.data;

                $('#empTypeID').val(EmpTypeData.id || '');
                $('#EmpType1').val(EmpTypeData.empType1 || '');
                //$('#roleDescription').val(roleData.roleDescription || '');
            } else {
                console.error('Error: Invalid or missing data in response.');
            }
        },
        error: function (error) {
            console.error('AJAX Error:', error);
        }
    });
}