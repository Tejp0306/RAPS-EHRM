
@{
    ViewData["Title"] = "TimeSheetDetails";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .page-heading {
        color: #007bff;
        text-align: center;
        font-weight: bold;
        text-transform: uppercase;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
        margin-bottom: 5px;
        font-family: Arial, sans-serif;
    }

    h3 {
        font-size: 1.5rem;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
<script src="~/JsPDF/jspdf.js"></script>
<script src="~/JsPDF/printThis.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>
<script src="~/JsPDF/JSPDFFunctions.js"></script>
<script src="~/CustomScripts/TimeSheet.js"></script>
<div class="container mt-1">
    <h3 class="page-heading">Timesheet Details</h3>

    <!-- Month Selector Dropdown -->
    <div class="mb-4 mt-5 col-lg-4">
        <label for="monthSelector" class="form-label">Select Month</label>
        <select id="monthSelector" class="form-select">
            <option value="Select Month">Select Month</option>
            <option value="January">January</option>
            <option value="February">February</option>
            <option value="March">March</option>
            <option value="April">April</option>
            <option value="May">May</option>
            <option value="June">June</option>
            <option value="July">July</option>
            <option value="August">August</option>
            <option value="September">September</option>
            <option value="October">October</option>
            <option value="November">November</option>
            <option value="December">December</option>
        </select>
    </div>

    <!-- Timesheet Table -->
    <div class="table-responsive">
        <table id="timesheetTable" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Project</th>
                    <th>Action</th>
                    <th>Attachments</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data rows will be dynamically populated here -->
            </tbody>
        </table>
    </div>

    <!-- Scrollable message -->
    <div class="scrolling-text mb-3" style="color: red; font-weight: bold; font-size: 1em;">
        * To view Timesheets please select the month.
    </div>

</div>

<!-- Modal Structure for Viewing Timesheet -->
<div class="modal fade" id="viewTimesheetModal" tabindex="-1" aria-labelledby="viewTimesheetModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewTimesheetModalLabel">Timesheet</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="viewTimesheetForm">
                    <!-- Modal Content will be dynamically inserted here -->
                    <div class="row mb-2">
                        <div class="col-md-6">
                            <label for="viewEmployeeName" class="form-label">Name of Employee:</label>
                            <input type="text" class="form-control" id="viewEmployeeName" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="viewClientName" class="form-label">Name of Client:</label>
                            <input type="text" class="form-control" id="viewClientName" readonly>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="viewEmployeePosition" class="form-label">Position of Employee:</label>
                            <input type="text" class="form-control" id="viewPosition" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="viewProjectName" class="form-label">Name of Project:</label>
                            <input type="text" class="form-control" id="viewProjectName" readonly>
                        </div>
                    </div>

                    <table class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>Date</th>
                                <th>Day</th>
                                <th># of Hours Worked</th>
                                <th>Description of Assignment Completed</th>
                                <th>Remarks</th>
                            </tr>
                        </thead>
                        <tbody id="viewTimesheetRows">
                            <!-- Timesheet rows will be dynamically added -->
                        </tbody>
                    </table>

                    <div class="col-md-12 mb-3">
                        <label for="viewNote" class="form-label">NOTE (optional):</label>
                        <input type="text" class="form-control" id="viewNote" readonly>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <label for="viewTotalHours" class="form-label">TOTAL Hours Worked:</label>
                            <input type="text" class="form-control" id="viewTotalHours" readonly>
                        </div>
                    </div>

                    <!-- Signature fields -->
                    <div class="row">
                        <div class="col-md-6">
                            <label for="viewEmployeeSignature" class="form-label">Signature of Employee:</label>
                            <input type="text" class="form-control" id="viewEmployeeSignature" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="viewManagerSignature" class="form-label">Signature Client Manager:</label>
                            <input class="form-control" id="viewManagerSignature" readonly>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <label for="viewSubmissionDate" class="form-label">Date of Submission:</label>
                            <input type="text" class="form-control" id="viewSubmissionDate" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="viewSignatureDate" class="form-label">Date of Signature:</label>
                            <input type="text" class="form-control" id="viewSignatureDate" readonly>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap Modal -->
<div class="modal fade" id="attachmentsModal" tabindex="-1" role="dialog" aria-labelledby="attachmentsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="attachmentsModalLabel">Attachments</h5>
            </div>
            <div class="modal-body">
                <ul id="attachmentLinks" class="list-group"></ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
        $(document).on('click', '[data-dismiss="modal"]', function () {
        $('#attachmentsModal').modal('hide');
    });

</script>
@* <script src="~/CustomScripts/TimeSheetDetails.js"></script> *@
<script>
         $(document).ready(function () {

        // Month name to number mapping
        var monthMapping = {
            "January": "0", "February": "1", "March": "2", "April": "3", "May": "4", "June": "5",
            "July": "6", "August": "7", "September": "8", "October": "9", "November": "10", "December": "11"
        };

            // Handle month selection change
        $('#monthSelector').change(function () {
            var selectedMonth = $(this).val();
            if (selectedMonth !== "Select Month") {
                var monthNumber = monthMapping[selectedMonth];

                $.ajax({
                url: '/Self/GetTimeSheetByMonthData',
                    type: 'GET',
                    data: { month: monthNumber },
                    success: function (response) {
                            $('#timesheetTable tbody').empty();

                    if (response.length) {
                        $.each(response, function (index, ts) {
                            var row = `
                                <tr>
                                    <td>${ts.id}</td>
                                    <td>${ts.name}</td>
                                    <td>${ts.project}</td>
                                    <td>
                                        <button class="btn btn-success viewTimesheet" data-id="${ts.id}">View</button>
                                        <button class="btn btn-info printTimesheet" data-id="${ts.id}">Print</button>
                                    </td>
                                    <td>
                                        <button class="btn btn-primary view-attachments" data-id="${ts.id}">View Attachments</button>
                                    </td>
                                </tr>`;
                            $('#timesheetTable tbody').append(row);
                            });
                        } else {
                        var row = `<tr><td colspan="5" class="text-center">No timesheets found for this month.</td></tr>`;
                            $('#timesheetTable tbody').append(row);
                        }
                    },
                    error: function () {
                    var row = `<tr><td colspan="5" class="text-center">Error fetching data. Please try again.</td></tr>`;
                        $('#timesheetTable tbody').append(row);
                    }
                });
            }
        });

        // Handle View Attachments button click
    $(document).on('click', '.view-attachments', function () {
        const id = $(this).data('id');

        $.ajax({
            url: "/Self/ShowFile",
            method: 'GET',
            data: { id: id },
            success: function (response) {
                if (response.success) {
                    let filePaths = response.data.data.filePath;

                    console.log("Response data:", filePaths); // Debugging log

                    // Ensure filePaths is an array
                    if (!filePaths) {
                        alert("No attachments found.");
                        return;
                    }
                    if (typeof filePaths === 'string') {
                        filePaths = [filePaths]; // Convert to array
                    } else if (!Array.isArray(filePaths)) {
                        console.error("Unexpected file format:", filePaths);
                        alert("Invalid file format received.");
                        return;
                    }

                    // Clear previous links
                    $('#attachmentLinks').empty();

                    // Supported file formats
                    const supportedFormats = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'pdf', 'doc', 'docx'];

                    // Generate numbered links for each file
                    filePaths.forEach((filePath, index) => {
                        if (!filePath || !filePath.includes('.')) return; // Skip empty/invalid values

                        let fileExtension = filePath.split('.').pop().trim().toLowerCase();

                        console.log("Checking file:", filePath, "Extension:", fileExtension); // Debugging log

                        if (supportedFormats.includes(fileExtension)) {
                            // Ensure the file path is absolute
                            let fullUrl = filePath.startsWith('http') ? filePath : window.location.origin + filePath;

                            // Create a list item with a generic "Attachment X" text as a link
                            let listItem = `
                                <li class="list-group-item">
                                    <a href="${fullUrl}" target="_blank">Attachment ${index + 1}</a>
                                </li>`;
                            $('#attachmentLinks').append(listItem);
                        } else {
                            console.warn('Unsupported file format:', filePath);
                        }
                    });

                    // Show modal if files exist, otherwise show alert
                    if ($('#attachmentLinks').children().length > 0) {
                        $('#attachmentsModal').modal('show');
                    } else {
                        alert("No valid attachments found.");
                    }
                } else {
                    alert("File not found.");
                }
            },
            error: function (error) {
                console.error('Error fetching file:', error);
                alert("An error occurred while fetching the file.");
            }
        });
    });


        // Handle View Timesheet button click
        $('#timesheetTable').on('click', '.viewTimesheet', function () {
            var timesheetId = $(this).data('id');

            $.ajax({
                url: '/Self/GetTimeSheetById',
                type: 'GET',
                data: { id: timesheetId },
                success: function (response) {
                    if (response.data) {
                        $('#viewEmployeeName').val(response.data.empName);
                        $('#viewClientName').val(response.data.clientName);
                        $('#viewPosition').val(response.data.position);
                        $('#viewProjectName').val(response.data.projectName);
                        $('#viewNote').val(response.data.note);
                        $('#viewTotalHours').val(response.data.totalHours);
                        $('#viewEmployeeSignature').val(response.data.employeeSignature);
                        $('#viewManagerSignature').val(response.data.managerSignature);
                        $('#viewSubmissionDate').val(response.data.submissionDate);
                        $('#viewSignatureDate').val(response.data.signatureDate);

                        var rows = '';
                        $.each(response.data.dailyEntries, function (index, row) {
                            rows += `<tr>
                                        <td>${row.dayDate}</td>
                                        <td>${row.dayOfWeek}</td>
                                        <td>${row.hoursWorked}</td>
                                        <td>${row.assignmentDesc}</td>
                                        <td>${row.remarks}</td>
                                    </tr>`;
                        });
                        $('#viewTimesheetRows').html(rows);

                        $('#viewTimesheetModal').modal('show');
                    } else {
                        alert("No data available for the selected timesheet.");
                    }
                },
                error: function () {
                    alert("Error fetching timesheet details.");
                }
            });
        });

        // Handle Print Timesheet button click
    $('#timesheetTable').on('click', '.printTimesheet', function () {
            var timesheetId = $(this).data('id');

        $.ajax({
                url: '/Self/GetTimeSheetById',
            type: 'GET',
                data: { id: timesheetId },
            success: function (response) {
                if (response.success) {
                        var timesheet = response.data;
                    var doc = new jsPDF();

                    // Title Styling
                    doc.setFontSize(20);
                        doc.setTextColor(41, 128, 185);
                        doc.line(10, 10, 200, 10);
                    doc.text('Timesheet Details', 14, 20);
                        doc.setFont("times", "bold");

                        // Add details
                    doc.setFontSize(12);
                        doc.setTextColor(0, 0, 0);
                    doc.text('Employee Name: ' + timesheet.empName, 14, 30);
                    doc.text('Client Name: ' + timesheet.clientName, 14, 40);
                    doc.text('Position: ' + timesheet.position, 14, 50);
                    doc.text('Project Name: ' + timesheet.projectName, 14, 60);
                    doc.text('Employee Signature: ' + timesheet.employeeSignature, 14, 70);
                    doc.text('Manager Signature: ' + timesheet.managerSignature, 14, 80);
                    doc.text('Signature Date: ' + timesheet.signatureDate, 14, 90);
                    doc.text('Submission Date: ' + timesheet.submissionDate, 14, 100);
                    doc.text('Note: ' + timesheet.note, 14, 110);
                    doc.text('Total Hours: ' + timesheet.totalHours, 14, 120);

                        // Table Data
                        var tableData = timesheet.dailyEntries.map(entry => [
                            entry.dayDate, entry.dayOfWeek, entry.hoursWorked, entry.assignmentDesc, entry.remarks
                        ]);

                    var headers = [
                        { title: 'Date', dataKey: 'date' },
                        { title: 'Day', dataKey: 'day' },
                        { title: 'Hours Worked', dataKey: 'hoursWorked' },
                        { title: 'Assignment', dataKey: 'assignment' },
                        { title: 'Remarks', dataKey: 'remarks' }
                    ];

                    doc.autoTable({
                            head: [headers],
                            body: tableData,
                            startY: 130,
                            margin: { top: 10, left: 14, right: 14 },
                            theme: 'grid',
                            headStyles: { fillColor: [41, 128, 185], textColor: [255, 255, 255], fontSize: 12 },
                            bodyStyles: { fontSize: 10 },
                            columnStyles: { 0: { cellWidth: 'auto' }, 1: { cellWidth: 'auto' }, 2: { cellWidth: 'auto' }, 3: { cellWidth: 'auto' }, 4: { cellWidth: 'auto' } },
                            styles: { cellPadding: 5, halign: 'center' }
                    });

                    var pdfBlob = doc.output('blob');
                    var url = URL.createObjectURL(pdfBlob);
                    window.open(url, '_blank');
                } else {
                    alert(response.Message || "Error fetching timesheet data.");
                }
            },
            error: function () {
                    alert("An error occurred while fetching the timesheet data.");
            }
        });
    });

    });


</script>