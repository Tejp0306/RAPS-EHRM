
@{
    ViewData["Title"] = "ClientDeclarationFormDetails";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}
<style>
    .page-heading {
        color: #007bff;
        text-align: center;
        font-weight: bold;
        text-transform: uppercase;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
        margin-bottom: 20px;
        font-family: Arial, sans-serif;
    }

    .form-label {
        font-weight: bold;
    }

    .btn-custom {
        background-color: #007bff;
        color: white;
        border: none;
    }

        .btn-custom:hover {
            background-color: #0056b3;
        }

    .form-container {
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
    }
</style>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
<div class="container mt-4">
    <h3 class="page-heading">Client Declaration Details</h3>
    <div class="table-responsive">
        <table id="clientDeclarationTable1" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Employee Name</th>
                    <th>Client Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- Sample Data (Dynamically generated in backend) -->
                <tr>
                </tr>

            </tbody>
        </table>
    </div>
</div>

<!-- Client Declaration Modal -->
<div class="modal fade" id="openClientDeclarationModalDetail" tabindex="-1" aria-labelledby="openClientDeclarationModalDetailLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Client Property Declaration Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="clientDeclarationForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Full Name of Employee</label>
                            <input id="EmployeeNameone" name="EmployeeName" class="form-control" readonly required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Client Name</label>
                            <input id="ClientNameone" name="ClientName" class="form-control" readonly required>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Date of Receipt</label>
                        <input id="ReceivedDateone" type="date" name="ReceivedDate" class="form-control" readonly required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Items Received</label>
                        <textarea id="ItemsReceivedone" class="form-control" rows="4" readonly required></textarea>
                    </div>

                    <p>
                        I confirm that I will take good care of the above property and ensure it is always kept in good working condition...
                    </p>

                    <p>
                        Also, if I am unable to return the property, I
                        <span id="EmployeeNameConfirmone" class="fw-bold" readonly></span>
                        confirm that and authorize that a suitable amount of the value of the property can be deducted from my final settlement amount.
                    </p>

                    <div class="mb-3">
                        <label class="form-label">Signature of Employee</label>
                        <input id="Signatureone" class="form-control" readonly>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Confirmation Date</label>
                        <input id="ConfirmationDateone" type="text" class="form-control" required readonly>
                    </div>

                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" id="downloadBtn" class="btn btn-success">
                        <i class="bi bi-download"></i> Download
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/JsPDF/jspdf.js"></script>
<script>
         $(document).ready(function () {
        getClientDeclarationDetail();
    });

    // Function to fetch acknowledgment data and populate the DataTable
    function getClientDeclarationDetail() {
        $('#clientDeclarationTable1').DataTable({
            destroy: true,
            ajax: {
                url: '/PostJoining/GetClientPropertyDeclaration',
                method: 'GET',
                dataSrc: ''
            },
            columns: [
                { data: 'employeeName' },
                { data: 'clientName' },
                {
                    data: 'id',
                    render: function (data) {
                        return `
                            <div class="d-flex justify-content-center">
                                <button class="btn btn-info btn-sm mx-1 view-btn" data-id="${data}">
                                    <i class="bi bi-eye"></i> View & Download
                                </button>
                            </div>
                        `;
                    },
                    orderable: false
                }
            ],
            pageLength: 5,
            lengthMenu: [5, 10, 15, 20]
        });

        // Bind click event for dynamically added buttons
        $('#clientDeclarationTable1 tbody').on('click', '.view-btn', function () {
            const id = $(this).data('id');
            openClientDeclarationModalDetail(id);
        });
    }

    function openClientDeclarationModalDetail(Id) {
        $.ajax({
            url: `/PostJoining/GetClientDeclaration/${Id}`,
            method: 'GET',
            success: function (response) {
                if (response.success) {
          

                    const data = response.data.data || response.data;

                    // Populate modal fields
                    $('#EmployeeNameone').val(data?.employeeName || "N/A");
                    $('#ClientNameone').val(data?.clientName || "N/A");
                    $('#ReceivedDateone').val(data?.receivedDate || "N/A");
                    $('#ItemsReceivedone').val(data?.itemsReceived || "N/A");
                    $('#Signatureone').val(data?.signature || "N/A");
                    $('#ConfirmationDateone').val(data?.confirmationDate || "N/A");

                    // Set Employee Name Confirmation inside the <p> tag
                    $('#EmployeeNameConfirmone').html(data?.employeeName || "N/A");

                    // Ensure download button exists
                    if ($('#downloadBtn').length === 0) {
                        $('#clientDeclarationModal .modal-footer').append(
                            `<button id="downloadBtn" class="btn btn-primary">Download PDF</button>`
                        );
                    }

                    // Attach click event (ensure no duplicate events)
                    $('#downloadBtn').off('click').on('click', function () {
                        downloadClientDeclarationDetail(data);
                    });

                    // Show the modal
                    $('#openClientDeclarationModalDetail').modal('show');
                } else {
                    alert("Error: " + response.message);
                }
            },
            error: function () {
                alert("An error occurred while fetching the data.");
            }
        });
    }

    function downloadClientDeclarationDetail(data) {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        // Extract modal content
        const employeeName = data?.employeeName || "N/A";
        const clientName = data?.clientName || "N/A";
        const receivedDate = data?.receivedDate || "N/A";
        const itemsReceived = data?.itemsReceived || "N/A";
        const employeeSignature = data?.signature || "N/A";
        const confirmationDate = data?.confirmationDate || "N/A";

        // Acknowledgment Text
        const acknowledgementText = `I, ${employeeName}, confirm that if I am unable to return the property, I authorize that a suitable amount of the value of the property can be deducted from my final settlement amount.`;

        // Set PDF Title
        doc.setFont("helvetica", "bold");
        doc.setFontSize(16);
        doc.text("Client Property Declaration Form", 20, 20);

        // Add Employee & Client Information
        doc.setFont("helvetica", "normal");
        doc.setFontSize(12);
        doc.text(`Full Name of Employee: ${employeeName}`, 20, 40);
        doc.text(`Client Name: ${clientName}`, 20, 50);
        doc.text(`Date of Receipt: ${receivedDate}`, 20, 60);

        // Items Received (Multiline)
        doc.text("Items Received:", 20, 70);
        doc.setFont("helvetica", "italic");
        doc.text(itemsReceived, 20, 80, { maxWidth: 170 });

        // Reset font to normal
        doc.setFont("helvetica", "normal");

        // Declaration Text
        doc.text(
            "I confirm that I will take good care of the above property and ensure it is always kept in good working condition...",
            20, 100,
            { maxWidth: 170 }
        );

        // Acknowledgment Statement
        doc.setFont("helvetica", "bold");
        doc.text("Acknowledgment Statement:", 20, 120);

        doc.setFont("helvetica", "normal");
        doc.text(acknowledgementText, 20, 130, { maxWidth: 170 });

        // Signature and Confirmation Date
        doc.text(`Signature of Employee: ${employeeSignature}`, 20, 150);
        doc.text(`Confirmation Date: ${confirmationDate}`, 20, 160);

        // Save the PDF
        doc.save(`Client_Declaration_${data.id || "Form"}.pdf`);
    }
</script>

